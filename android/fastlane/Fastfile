# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# Fastfile

default_platform(:android)


# upload_to_play_store(
#      track: 'internal',
#      # apk: '../build/app/outputs/apk/release/app-release.apk',
#      skip_upload_changelogs: true,
#      skip_upload_images: true,
#      skip_upload_screenshots: true,
#     )

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    # crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end

desc "Increment version code"
lane :increment_vc do
 increment_version_code(
       gradle_file_path: "./app/build.gradle",

 )
end

lane :beta do
    # supply(track: 'internal', version_code: 5)
    # Adjust the `build_type` and `flavor` params as needed to build the right APK for your setup

    # gradle(task: "clean assembleRelease")
    version_code_from_play_store_strings = google_play_track_version_codes(
        package_name: "com.mmmedia.despresso",   # PACKAGE_NAME is a global variable defined earlier
        track: "alpha",          # this can be alpha, Closed Beta etc.
        # json_key: PLAYSTORE_KEY_PATH,
      )

    version_code_from_play_store = version_code_from_play_store_strings[0].to_i
    UPDATED_VERSION_CODE = version_code_from_play_store + 1
    increment_version_code(
        gradle_file_path: Dir.pwd + "/../app/build.gradle",
        version_code: UPDATED_VERSION_CODE.to_i
    )  

    # sh("bash", "./configsentry.sh")

    gradle(task: "clean bundleRelease")
        
    sentry_upload_dif(
        auth_token: ENV['SENTRY_AUTH_TOKEN'],
        org_slug: 'mmmediacom',
        project_slug: 'despresso',
        include_sources: true, # Optional. For source context.
    )
    
    upload_to_play_store(aab: '../build/app/outputs/bundle/release/app-release.aab', track: 'alpha')

    
    # sh("mv ../../lib/main.dart-e ../../lib/main.dart")
    # supply(track: 'Closed Beta', version_code: 2)    
    #     
  
    # ...
  end

  lane :internal do
    # supply(track: 'internal', version_code: 5)
    # Adjust the `build_type` and `flavor` params as needed to build the right APK for your setup

    # gradle(task: "clean assembleRelease")    
    gradle(task: "clean bundleRelease")    
    
    upload_to_play_store(aab: '../build/app/outputs/bundle/release/app-release.aab', track: 'internal')
    # supply(track: 'Closed Beta', version_code: 2)    
    #     
  
    # ...
  end